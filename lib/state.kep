/**
 * @fileOverview State computation
 */
package State
with
    import './trampoline' Trampoline,
    import './trans/state' StateT
in {

/* Structure
 ******************************************************************************/
State = StateT(Trampoline);

/* Running
 ******************************************************************************/
/**
 * Perform a state computation and return resulting value, state pair.
 * 
 * @param m State computation.
 * @param s Initial state.
 */
State.runState = StateT.runStateT \>> Trampoline.run;

/**
 * Perform a state computation and return resulting value.
 * 
 * @param m State computation.
 * @param s Initial state.
 */
State.evalState = StateT.evalStateT \>> Trampoline.run;

/**
 * Perform a state computation and return resulting state.
 * 
 * @param m State computation.
 * @param s Initial state.
 */
State.execState = StateT.execStateT \>> Trampoline.run;

}