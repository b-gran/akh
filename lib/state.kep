/**
 * @fileOverview State computation.
 */
package State
with
    import './identity' Identity,
    import './trans/state' StateT
in {

/* Structure
 ******************************************************************************/
State := StateT(Identity);

/* Running
 ******************************************************************************/
/**
 * Perform a state computation and return resulting value, state pair.
 * 
 * @param m State computation.
 * @param s Initial state.
 */
State.runState = StateT.runStateT \>> Identity.runIdentity;

/**
 * Perform a state computation and return resulting value.
 * 
 * @param m State computation.
 * @param s Initial state.
 */
State.evalState = StateT.evalStateT \>> Identity.runIdentity;

/**
 * Perform a state computation and return resulting state.
 * 
 * @param m State computation.
 * @param s Initial state.
 */
State.execState = StateT.execStateT \>> Identity.runIdentity;

}