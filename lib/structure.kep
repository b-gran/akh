package (
    Functor
    Monad
    Monoid) {

Functor = \instance map -> {
    instance.map = map;
    instance.prototype.map = \f =self-> map(self, f);
    
    return instance;
};

Monoid = \instance zero plus -> {
    instance.zero = instance.prototype.zero = zero;
    
    instance.concat = plus;
    instance.prototype.concat = \c =self-> plus(self, c);
    
    return instance;
};

Monad = \instance of chain -> {
    instance.of = instance.prototype.of = of;
    
    instance.chain = chain;
    instance.prototype.chain = \f =self-> chain(self, f);
    
    return instance;
};

}