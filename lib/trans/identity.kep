/**
 * @fileOverview Identity monad transformer.
 */
package Identity
with
    import '../structure' {Monad Monoid}
in {

/* Transform
 ******************************************************************************/
Identity = \m -> {
    var Instance = function \x =self-> {
        self.value = x;
    };
    
    Monad(Instance,
        \x ->
            new Instance (m.of x),
        
        \c f ->
            new Instance (c.chain f));
    
    Monoid(Instance,
        new Instance m.zero,
        
        \a b ->
            new Instance (a.concat b));
    
    // Lift
    Instance.lift = Instance.prototype.lift = \t ->
        new Instance t;
    
    return Instance;
};

/* Running
 ******************************************************************************/
/**
 * Run an identity computation.
 */
Identity.runIdentityT = \c -> c.value;

}